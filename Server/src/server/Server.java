/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server;

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;

/**
 *
 * @author camilo
 */
public final class Server {

    private Socket socket = null;
    private ServerSocket server = null;
    private DataInputStream in = null;
    private DataInputStream input = null;
    private DataOutputStream out = null;
    private Integer port;

    /**
     * @param port
     */
    public Server(Integer port) {
        this.port = port;
        try {

            connectToClient();

            while (true) {
                try {
                    System.out.println("-----Options-----");
                    System.out.println("1. Obtain system information");
                    System.out.println("2. Obtain open services");
                    System.out.println("3.");
                    System.out.println("4.");
                    System.out.println("5.");
                    System.out.println("6.");
                    System.out.println("7.");
                    System.out.println("8.");
                    System.out.println("9.");
                    
                    System.out.println("Enter the option");

                    String command = input.readLine();
                    try {
                        Integer option = Integer.parseInt(command);
                        if (option == 1) {
                            execCommand("systeminfo");
                        } else if (option == 2) {
                            execCommand("sc queryex type= service state= all");
                        }
                    } catch (NumberFormatException ex) {
                        System.out.println("Invalid option");
                    }
                    execCommand("systeminfo");

                } catch (SocketException i) {
                    System.out.println(i);
                }
            }
        } catch (IOException i) {
            System.out.println("Connection error");
        }
    }

    public void execCommand(String command) throws IOException {

        out.writeUTF(command);

        String clientResponse = in.readUTF();

        System.out.println(clientResponse);
    }

    public void connectToClient() throws IOException {
        server = new ServerSocket(port);

        System.out.println("Server started");
        System.out.println("Waiting for a client ...");

        socket = server.accept();
        System.out.println("Client accepted");

        // takes input from terminal
        input = new DataInputStream(System.in);

        // takes input from the client socket
        in = new DataInputStream(
                new BufferedInputStream(socket.getInputStream()));

        // sends output to the socket
        out = new DataOutputStream(socket.getOutputStream());
    }
}
